name: Comp490_002_Sprints Common Workflow

on:           # Run workflow
  push:       # with every push
    branches: # to branch(es)
      - main  # - main

jobs:                        # Creates a job
  build:                     # named "build"
    runs-on: ubuntu-latest   # that runs on the latest version of Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v2   # use GitHub checkout action to clone the repository to the runner

    - name: Set up Python
      uses: actions/setup-python@v2  # Installs Python on the runner
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |                                  # Upgrades pip and installs dependencies
        python -m pip install --upgrade pip  
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


  run_ai_resume_builder:
    runs-on: ubuntu-latest

    env:
      API_KEY: ${{ secrets.API_KEY }}  # Set API key to environment variable

    steps:
    - name: Checkout code
      uses: actions/checkout@v2   # use GitHub checkout action to clone the repository to the runner

    - name: Set up Python
      uses: actions/setup-python@v2  # Installs Python on the runner
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |                                  # Upgrades pip and installs dependencies
        python -m pip install --upgrade pip  
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set PYTHONPATH                          # Allows Python to find src module
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  # Set the PYTHONPATH to src folder
                                                    # $GITHUB_ENV stores env variables

    - name: Run ai_resume_builder
      run: |
        python src/ai_resume_builder/resume_generator.py  # Run ai_resume_builder module

  run_job_search_database:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2   # use GitHub checkout action to clone the repository to the runner

    - name: Set up Python
      uses: actions/setup-python@v2  # Installs Python on the runner
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |                                  # Upgrades pip and installs dependencies
        python -m pip install --upgrade pip  
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set PYTHONPATH                          # Allows Python to find src module
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  # Set the PYTHONPATH to src folder
                                                    # $GITHUB_ENV stores env variables
    - name: Run job_search_database
      run: |
        python src/job_search_database/job_search_database_driver.py  # Run job_search_database module

  run_job_search_gui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set PYTHONPATH                          # Allows Python to find src module
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  # Set the PYTHONPATH to src folder
                                                      # $GITHUB_ENV stores env variables

        # Provides a virtual display to fun GUI apps in headless env
      - name: Install xvfb
        run: sudo apt-get install -y xvfb

      - name: Run job_search_gui script with xvfb
        run: |
          python src/job_search_database/job_search_database_driver.py  # Run job_search_database module
          
          # Run program in background
          xvfb-run --auto-servernum python src/job_search_gui/job_search_gui_driver.py &
          
          PID=$!  # Get process ID of the background job
          
          # Check if the process is still running and kill it if necessary
          if ps -p $PID > /dev/null; then
          echo "Process is still running. Killing it..."
          kill $PID  # Terminate the process
          else
            echo "Process completed successfully."
          fi

  run_pylint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2   # use GitHub checkout action to clone the repository to the runner

    - name: Set up Python
      uses: actions/setup-python@v2  # Installs Python on the runner
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |                                  # Upgrades pip and installs dependencies
        python -m pip install --upgrade pip  
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi    

    - name: Set PYTHONPATH                          # Allows Python to find src module
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  # Set the PYTHONPATH to src folder
                                                    # $GITHUB_ENV stores env variables

    - name: Run pylint on ai_resume_builder
      run: |
        echo "Current Directory: $(pwd)"
        echo "PYTHONPATH: $PYTHONPATH"
        pylint src/ai_resume_builder  # Run pylint on ai_resume_builder directory
      continue-on-error: true

    - name: Run pylint on job_search_database
      run: |
        echo "Current Directory: $(pwd)"
        echo "PYTHONPATH: $PYTHONPATH"
        pylint src/job_search_database  # Run pylint on job_search_database directory
      continue-on-error: true

    - name: Run pylint on job_search_gui
      run: |
        pylint src/job_search_gui  # Run pylint on job_search_gui

    - name: Run pylint on tests
      run: |
        export PYTHONPATH=$(pwd)
        pylint tests  # Run pylint on tests directory
      continue-on-error: true

  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2   # use GitHub checkout action to clone the repository to the runner

    - name: Set up Python
      uses: actions/setup-python@v2  # Installs Python on the runner
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |                                  # Upgrades pip and installs dependencies
        python -m pip install --upgrade pip  
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set PYTHONPATH                          # Allows Python to find src module
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV  # Set the PYTHONPATH to src folder
                                                    # $GITHUB_ENV stores env variables
    - name: Run tests
      run: |      
        echo "Current Directory: $(pwd)"
        echo "PYTHONPATH: $PYTHONPATH"
        pytest tests
      env:
        API_KEY: ${{ secrets.API_KEY }}  # Set API key to environment variable for tests
